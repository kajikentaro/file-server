name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.19'

      - name: Build Windows executable
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o file-server-${{ github.event.inputs.version }}-windows-amd64.exe main.go

      - name: Build Linux executable
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o file-server-${{ github.event.inputs.version }}-linux-amd64 main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload Windows executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./file-server-${{ github.event.inputs.version }}-windows-amd64.exe
          asset_name: file-server-${{ github.event.inputs.version }}-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./file-server-${{ github.event.inputs.version }}-linux-amd64
          asset_name: file-server-${{ github.event.inputs.version }}-linux-amd64
          asset_content_type: application/octet-stream
